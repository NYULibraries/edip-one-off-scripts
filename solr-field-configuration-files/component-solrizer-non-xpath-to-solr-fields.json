{
    "`author_teim` data, if it exists, which strangely does not ever appear to be the case, because it's not defined in the OM Terminology and not included in `additional_component_fields()`.  Note that if it did, it would simply overwrite the existing `author_teim` field with the exact same data, in addition to adding `author_sim` and `author_ssm`.": {
        "solrFields": [
            "author_teim",
            "author_ssm",
            "author_sim"
        ]
    },
    "`collection_sim` data, if it exists.  Note that in v1 indexer, this simply overwrites the existing `collection_sim` field with the exact same data, in addition to adding `collection_ssm` and  `collection_teim`.": {
        "solrFields": [
            "collection_teim",
            "collection_ssm",
            "collection_sim"
        ]
    },
    "`true` if there are <c> child nodes, otherwise `false`": {
        "solrFields": [
            "component_children_bsi"
        ]
    },
    "The number of ancestor <c> elements plus 1": {
        "solrFields": [
            "component_level_isim"
        ]
    },
    "Hardcoded \"Online Access\" if //dao is not empty": {
        "solrFields": [
            "dao_sim"
        ]
    },
    "For each [UNITDATE_NORMAL] date that falls within `start_date` and `end_date` ranges found in v1 indexer `DATE_RANGES` here: https://github.com/NYULibraries/ead_indexer/blob/f1bc142dfe1507dbd173bfa126168fa52bba9871/lib/ead_indexer/behaviors/dates.rb#L4-L15, add to array.  If there are no in-range values, then value is an array with a single string \"undated & other\".": {
        "solrFields": [
            "date_range_sim"
        ]
    },
    "If `level` matches /\\Aseries|subseries/) then use \"Archival Series\", else \"Archival Object\"": {
        "solrFields": [
            "format_sim",
            "format_ssm"
        ]
    },
    "Parent <c> `id` attribute if it is defined, omit this Solr field if it is not defined.": {
        "solrFields": [
            "parent_ssi"
        ]
    },
    "`id` attributes of all ancestor <c> elements ordered from earliest ancestor to immediate parent.": {
        "solrFields": [
            "parent_ssm"
        ]
    },
    "Derived from name of parent directory of EAD file": {
        "solrFields": [
            "repository_ssm",
            "repository_sim",
            "repository_ssi"
        ]
    }
}